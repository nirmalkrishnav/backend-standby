# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - walmart-fashion-ai-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    
    environment:
      name: 'Production'
      url: 'https://walmart-fashion-ai-api-e8e0afc0bdbjhebh.eastus2-01.azurewebsites.net'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: npm install, build, and test
        run: |
          npm ci
          npm run build --if-present
          npm test --if-present

      - name: Create production package
        run: |
          # Install only production dependencies
          npm ci --production
          
          # Only include necessary files for production
          mkdir production-app
          cp package.json production-app/
          cp package-lock.json production-app/ 2>/dev/null || cp yarn.lock production-app/ 2>/dev/null || true
          cp server.js production-app/
          cp web.config production-app/
          cp .deployment production-app/
          cp -r services production-app/ 2>/dev/null || true
          cp -r node_modules production-app/
          
      - name: Zip artifact for deployment
        run: |
          cd production-app
          zip -r ../release.zip . -x "*.git*" "*.env*" "*.log" "node_modules/.cache/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    environment:
      name: 'Production'
      url: 'https://walmart-fashion-ai-api-e8e0afc0bdbjhebh.eastus2-01.azurewebsites.net'
    
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_577EC189E29F42DEB055581C0B122C60 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_35C1F98AD7D644B6A9BE2D30FA073439 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8090579BEF7242FCBF8779911622D334 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'walmart-fashion-ai-api'
          slot-name: 'Production'
          package: .
          
      - name: Set App Settings
        uses: Azure/appservice-settings@v1
        with:
          app-name: 'walmart-fashion-ai-api'
          slot-name: 'Production'
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~22"
              },
              {
                "name": "PORT",
                "value": "8080"
              },
              {
                "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                "value": "false"
              },
              {
                "name": "AZURE_CLIENT_ID",
                "value": "${{ secrets.AZURE_CLIENT_ID }}"
              },
              {
                "name": "AZURE_CLIENT_SECRET",
                "value": "${{ secrets.AZURE_CLIENT_SECRET }}"
              },
              {
                "name": "AZURE_TENANT_ID",
                "value": "${{ secrets.AZURE_TENANT_ID }}"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "1"
              },
              {
                "name": "WEBSITE_STARTUP_FILE",
                "value": "server.js"
              }
            ]
            
      - name: Health Check
        run: |
          # Install jq for JSON parsing
          sudo apt-get update && sudo apt-get install -y jq
          
          echo "Waiting for deployment to stabilize..."
          sleep 30
          
          # Check if the health endpoint is responding
          for i in {1..5}; do
            echo "Health check attempt $i..."
            if curl -f -s "https://walmart-fashion-ai-api-e8e0afc0bdbjhebh.eastus2-01.azurewebsites.net/api/health" > /dev/null; then
              echo "✅ Health check passed!"
              curl -s "https://walmart-fashion-ai-api-e8e0afc0bdbjhebh.eastus2-01.azurewebsites.net/api/health" | jq '.'
              break
            else
              echo "❌ Health check failed, retrying in 10 seconds..."
              sleep 10
            fi
            
            if [ $i -eq 5 ]; then
              echo "❌ Health check failed after 5 attempts"
              exit 1
            fi
          done
          